import os
import xml.etree.ElementTree as ET

def convertto_yolov8(voc_dir, yolo_dir, classes_file):
 
    
    # Load class names from the classes file
    with open(classes_file, 'r') as file:
        class_names = file.read().strip().split()
    
    # Ensure the YOLO directory exists
    os.makedirs(yolo_dir, exist_ok=True)
    
    # Iterate through all XML files in the VOC directory
    for xml_file in os.listdir(voc_dir):
        if not xml_file.endswith('.xml'):
            continue
        
        # Parse the XML file
        tree = ET.parse(os.path.join(voc_dir, xml_file))
        root = tree.getroot()
        
        # image dimensions
        size = root.find('size')
        width = int(size.find('width').text)
        height = int(size.find('height').text)
        
        # Prepare the corresponding YOLO annotation file
        yolo_file_path = os.path.join(yolo_dir, os.path.splitext(xml_file)[0] + '.txt')
        with open(yolo_file_path, 'w') as yolo_file:
            # Process each object in the XML
            for obj in root.findall('object'):
                class_name = obj.find('name').text
                if class_name not in class_names:
                    continue
                class_id = class_names.index(class_name)
                
                #  bounding box coordinates
                bndbox = obj.find('bndbox')
                xmin = int(bndbox.find('xmin').text)
                ymin = int(bndbox.find('ymin').text)
                xmax = int(bndbox.find('xmax').text)
                ymax = int(bndbox.find('ymax').text)
                
                # Convert to YOLO format (normalized center coordinates and width/height)
                x_center = (xmin + xmax) / 2.0 / width
                y_center = (ymin + ymax) / 2.0 / height
                box_width = (xmax - xmin) / width
                box_height = (ymax - ymin) / height
                
                # Converted annotation saved to the YOLO file
                yolo_file.write(f"{class_id} {x_center:.6f} {y_center:.6f} {box_width:.6f} {box_height:.6f}\n")

# Actual usage
voc_annotations_dir = 'datasets/labels'
yolo_annotations_dir = 'datasets/yolo'
classes_txt = 'datasets/classes.txt'

convertto_yolov8(voc_annotations_dir, yolo_annotations_dir, classes_txt)
